# Netwrok
network:
  adjacency_matrix: [
    [0, 1, 0, 1, 0, 0, 0, 0, 0],  # Node 0
    [1, 0, 1, 0, 1, 0, 0, 0, 0],  # Node 1
    [0, 1, 0, 0, 0, 1, 0, 0, 0],  # Node 2
    [1, 0, 0, 0, 1, 0, 1, 0, 0],  # Node 3
    [0, 1, 0, 1, 0, 1, 0, 1, 0],  # Node 4
    [0, 0, 1, 0, 1, 0, 0, 0, 1],  # Node 5
    [0, 0, 0, 1, 0, 0, 0, 1, 0],  # Node 6
    [0, 0, 0, 0, 1, 0, 1, 0, 1],  # Node 7
    [0, 0, 0, 0, 0, 1, 0, 1, 0]   # Node 8
  ]
  origin_nodes: [0, 8, 2, 6]
  destination_nodes: [8, 0, 2, 6]


# Simulation Parameters
simulation:
  simulation_steps: 500
  unit_time: 10
  assign_flows_type: "classic"
  path_finder:
    k_paths: 5
    theta: 10 # temperature parameter for softmax
    alpha: 1 # congestion weight
    beta: 0.5 # congestion weight
    omega: 0.8 # capacity weight

# Default Link Parameters
default_link:
  length: 50
  width: 4
  free_flow_speed: 1.1
  k_critical: 2
  k_jam: 6
  gamma: 0.01
  speed_noise_std: 0.05
  fd_type: "yperman"
  activity_probability: 0
  bi_factor: 1

controllers:
  enabled: true  # Set to true to enable controller-based path expansion
#  nodes: [4]  # List of node IDs that act as controllers
  links: ["1-4"]

# Demand Configuration
demand:
  origin_0:
    pattern: "gaussian_peaks"
    peak_lambda: 25
    base_lambda: 20

  origin_8:
    pattern: "gaussian_peaks"
    peak_lambda: 25
    base_lambda: 20

  origin_2:
    pattern: "gaussian_peaks"
    peak_lambda: 50
    base_lambda: 20

  origin_6:
    pattern: "gaussian_peaks"
    peak_lambda: 50
    base_lambda: 20